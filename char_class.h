#ifndef CHAR_CLASS_H
#define CHAR_CLASS_H 1

typedef enum char_class_enum
{
  /* legal char class id starts from 1 */
  CHAR_CLASS_EMPTY=1,

  CHAR_CLASS_LOWER_CASE,
  CHAR_CLASS_UPPER_CASE,
  CHAR_CLASS_DEC_BEGIN,
  CHAR_CLASS_DEC_PART,
  CHAR_CLASS_IDENTIFIER_BEGIN,
  CHAR_CLASS_IDENTIFIER_PART,
  CHAR_CLASS_SPACES,
  CHAR_CLASS_NEWLINE,
  CHAR_CLASS_PUNCTUATION,
  CHAR_CLASS_OPERATOR,
  CHAR_CLASS_BACKSLASH,
  CHAR_CLASS_SEPARATOR,

  CHAR_CLASS_CHAR_LITERAL,
  CHAR_CLASS_SINGLE_ESCAPE_NON_ZERO ,
  CHAR_CLASS_SINGLE_ESCAPE,
  CHAR_CLASS_HEX_LETTER,
  CHAR_CLASS_HEX_BEGIN,
  CHAR_CLASS_OCT_BEGIN_NOT_ZERO ,
  CHAR_CLASS_OCT_BEGIN ,
  CHAR_CLASS_SINGLE_QUOTE,
  CHAR_CLASS_DOUBLE_QUOTE,
  CHAR_CLASS_LONG_SUFIX,
  CHAR_CLASS_UNSIGNED_SUFIX,
  CAHR_CLASS_SLASH,
  CHAR_CLASS_STAR,


  CHAR_CLASS_TILDE,
  CHAR_CLASS_EXCLAIM ,
  CHAR_CLASS_PERCENT ,
  CHAR_CLASS_CARET ,
  CHAR_CLASS_AMPERSAND ,
  CHAR_CLASS_VERTICAL_BAR ,
  CHAR_CLASS_POSITIVE ,
  CHAR_CLASS_NEGATIVE ,

  CHAR_CLASS_AMPERSAND_EQUAL ,
  CHAR_CLASS_VERTICAL_BAR_EQUAL ,
  CHAR_CLASS_POSITIVE_EQUAL ,
  CHAR_CLASS_NEGATIVE_EQUAL ,
  CHAR_CLASS_NEGATIVE_EQUAL_GREATER,


  CHAR_CLASS_LESS ,
  CHAR_CLASS_GREATER ,
  CHAR_CLASS_LESS_EQUAL ,
  CHAR_CLASS_GREATER_EQUAL ,
  CHAR_CLASS_SLASH_STAR_EQUAL,
  CHAR_CLASS_X,
  CHAR_CLASS_ZERO,
  CHAR_CLASS_EQUAL, 
  CHAR_CLASS_DOUBLE_QUOTE_NEWLINE_BACKSLASH,
  CHAR_CLASS_DOUBLE_QUOTE_NEWLINE,

  CHAR_CLASS_SINGLE_QUOTE_BACKSLASH_NEWLINE,
  CHAR_CLASS_SINGLE_QUOTE_NEWLINE,

  _CHAR_CLASS_NULL

} char_class_enum ;

extern char *char_class2string[];
void check_char_class(void);

#endif

